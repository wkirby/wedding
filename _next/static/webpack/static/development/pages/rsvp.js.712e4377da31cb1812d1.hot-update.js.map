{"version":3,"file":"static/webpack/static/development/pages/rsvp.js.712e4377da31cb1812d1.hot-update.js","sources":["webpack:///./components/RsvpForm.js"],"sourcesContent":["import axios from \"axios\";\nimport { Field, Formik } from \"formik\";\nimport React from \"react\";\nimport {\n  Alert,\n  Button,\n  Card,\n  CardBody,\n  CardTitle,\n  Form,\n  Spinner\n} from \"reactstrap\";\nimport * as yup from \"yup\";\nimport { GuestFields } from \"./GuestFields\";\nimport { SubmitButton } from \"./SubmitButton\";\n\nconst RSVP_URL = process.env.RSVP_URL;\n\nconst GUEST_SCHEMA = yup.object().shape({\n  name: yup.string().required(\"Please provide a name.\"),\n  attending: yup\n    .string()\n    .required(\"Please indicate whether you will be attending.\"),\n  mealOption: yup.string().when(\"attending\", {\n    is: \"Will Attend\",\n    then: yup.string().required(\"Please indicate a meal selection.\"),\n    otherwise: yup.string()\n  }),\n  email: yup.string().email(\"Please provide a valid email.\"),\n  phone: yup.string()\n});\n\nconst GUESTS_SCHEMA = yup.object().shape({\n  invitedGuest: yup.string().required(),\n  guests: yup.array().of(GUEST_SCHEMA)\n});\n\nexport class RsvpForm extends React.Component {\n  state = { error: null };\n\n  formatGuest = name => {\n    return {\n      name: name,\n      attending: \"\",\n      mealOption: \"\",\n      email: \"\",\n      phone: \"\"\n    };\n  };\n\n  onSubmit = async (values, actions) => {\n    const { afterSubmit } = this.props;\n    this.setState({ error: null });\n\n    try {\n      const res = await axios.post(RSVP_URL, values);\n      if (afterSubmit) {\n        afterSubmit(res.data);\n      }\n    } catch (e) {\n      if (e.response && e.response.status === 404) {\n        this.setState({\n          error: \"Sorry, we couldn't find any guests by that name.\"\n        });\n      } else {\n        console.log(e);\n        this.setState({\n          error: \"Sorry, something went wrong. Please try again later!\"\n        });\n      }\n    } finally {\n      actions.setSubmitting(false);\n    }\n  };\n\n  render() {\n    const { guestName, partnerName, plusOne = false, ...props } = this.props;\n    const { error } = this.state;\n    let guests = [];\n    if (guestName) {\n      guests.push(this.formatGuest(guestName));\n    }\n    if (partnerName) {\n      guests.push(this.formatGuest(partnerName));\n    }\n    if (plusOne) {\n      guests.push(this.formatGuest(\"Plus One\"));\n    }\n    if (guests.length < 1) {\n      return null;\n    }\n    return (\n      <>\n        {error && <Alert color=\"warning\">{error}</Alert>}\n        <Formik\n          validateOnBlur={false}\n          falidateOnChange={false}\n          initialValues={{ invitedGuest: guestName, guests }}\n          validationSchema={GUESTS_SCHEMA}\n          onSubmit={this.onSubmit}\n          render={props => (\n            <Form onSubmit={props.handleSubmit}>\n              <Field\n                type=\"hidden\"\n                name=\"invitedGuest\"\n                onChange={props.handleChange}\n                onBlur={props.handleBlur}\n                value={props.values.name}\n              />\n\n              {props.values.guests &&\n                props.values.guests.length > 0 &&\n                props.values.guests.map((guest, index) => (\n                  <Card key={index} className=\"mb-3\">\n                    <CardBody>\n                      {props.values.guests.length > 1 && (\n                        <CardTitle>\n                          <h5>Guest {index + 1}</h5>\n                        </CardTitle>\n                      )}\n                      <GuestFields guest={guest} index={index} {...props} />\n                    </CardBody>\n                  </Card>\n                ))}\n\n              <SubmitButton\n                block={!props.isSubmitting}\n                submitting={props.isSubmitting}\n                label=\"Send RSVP\"\n                submittingLabel=\"Sending...\"\n                type=\"submit\"\n              />\n            </Form>\n          )}\n        />\n      </>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AASA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAXA;AAcA;AACA;AACA;AAFA;AAKA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AACA;AADA;AAKA;AACA;AAAA;AACA;AACA;AACA;AATA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AASA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AApBA;AAAA;AAqBA;AArBA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAdA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAsCA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AAcA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAzBA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2CA;AApGA;AACA;AADA;AAAA;;;;A","sourceRoot":""}